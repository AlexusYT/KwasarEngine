//
// Created by alexus on 08.02.24.
//

#include "CppFile.h"

#include "CppDeclaration.h"
#include "CppDefinition.h"

namespace mer::editor::project {
mer::sdk::utils::ReportMessagePtr CppFile::writeFile(const std::filesystem::path &pPath) {
	std::filesystem::path path = pPath;
	path.replace_extension(getExtension());
	create_directories(pPath.parent_path());
	std::ofstream stream;
	try {
		stream.exceptions(std::_S_badbit | std::_S_eofbit | std::_S_failbit);
		stream.open(path);

		//language=cpp
		stream << R"(/*
 * This file is automatically generated. DO NOT EDIT! Your changes will be overwritten by the editor.
 */

)";
		for (const auto &include: includes) { stream << std::format("#include {}\n", include); }
		stream << "\n";
		for (const auto &cppDeclaration: getDeclarations()) {
			stream << cppDeclaration->getCode(0, isHeader()) << "\n";
		}
		for (const auto &cppDefinition: getDefinitions()) stream << cppDefinition->getCode(0, isHeader()) << "\n";

	} catch (...) {

		auto msg = mer::sdk::utils::ReportMessage::create();
		msg->setTitle("Failed to save the file.");
		msg->setMessage("Exception thrown");
		msg->addInfoLine("Trying to save the file at {}", pPath.string());
		return msg;
	}
	return nullptr;
}
} // namespace mer::editor::project