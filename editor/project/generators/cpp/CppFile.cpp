//  KwasarEngine is an SDK that can help you speed up game development.
//  Copyright (C) 2024-2025. Timofeev (Alexus_XX) Alexander
//
//  This program is free software; you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation; either version 2 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License along
//  with this program; if not, write to the Free Software Foundation, Inc.,
//  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

//
// Created by alexus on 08.02.24.
//

#include "CppFile.h"

#include "CppDeclaration.h"
#include "CppDefinition.h"

namespace ked {
ke::ReportMessagePtr CppFile::writeFile(const std::filesystem::path &pPath) {
	std::filesystem::path path = pPath;
	path.replace_extension(getExtension());
	create_directories(pPath.parent_path());
	std::ofstream stream;
	try {
		stream.exceptions(std::_S_badbit | std::_S_eofbit | std::_S_failbit);
		stream.open(path);

		//language=cpp
		stream << R"(/*
 * This file is automatically generated. DO NOT EDIT! Your changes will be overwritten by the editor.
 */

)";
		for (const auto &include: includes) { stream << std::format("#include {}\n", include); }
		stream << "\n";
		for (const auto &cppDeclaration: getDeclarations()) {
			stream << cppDeclaration->getCode(0, isHeader()) << "\n";
		}
		for (const auto &cppDefinition: getDefinitions()) stream << cppDefinition->getCode(0, isHeader()) << "\n";
	}
	catch (...) {
		auto msg = ke::ReportMessage::create();
		msg->setTitle("Failed to save the file.");
		msg->setMessage("Exception thrown");
		msg->addInfoLine("Trying to save the file at {}", pPath.string());
		return msg;
	}
	return nullptr;
}
} // namespace ked
